{
	"name": "df_Normalize_Internet_Sales_w_Truncate",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Fact_InternetSales",
						"type": "DatasetReference"
					},
					"name": "srcFactInternetSales"
				},
				{
					"dataset": {
						"referenceName": "DimPromotion",
						"type": "DatasetReference"
					},
					"name": "DimPromotion"
				},
				{
					"dataset": {
						"referenceName": "DimSalesTerritory",
						"type": "DatasetReference"
					},
					"name": "DimSalesTerritory"
				},
				{
					"dataset": {
						"referenceName": "DimCustomer",
						"type": "DatasetReference"
					},
					"name": "DimCustomer"
				},
				{
					"dataset": {
						"referenceName": "DimProduct",
						"type": "DatasetReference"
					},
					"name": "DimProduct"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "FactInternetSalesNormalized",
						"type": "DatasetReference"
					},
					"name": "TargetData"
				}
			],
			"transformations": [
				{
					"name": "joinPromotion"
				},
				{
					"name": "lkupSalesTerritory"
				},
				{
					"name": "lkupCustomer"
				},
				{
					"name": "lkupProduct"
				},
				{
					"name": "slctTargetData"
				},
				{
					"name": "drvCustomerName"
				},
				{
					"name": "slctTarget"
				},
				{
					"name": "slctAfterLkups"
				},
				{
					"name": "surrKey"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductKey as integer,",
				"          OrderDateKey as integer,",
				"          DueDateKey as integer,",
				"          ShipDateKey as integer,",
				"          CustomerKey as integer,",
				"          PromotionKey as integer,",
				"          CurrencyKey as integer,",
				"          SalesTerritoryKey as integer,",
				"          SalesOrderNumber as string,",
				"          SalesOrderLineNumber as integer,",
				"          RevisionNumber as integer,",
				"          OrderQuantity as integer,",
				"          UnitPrice as decimal(19,4),",
				"          ExtendedAmount as decimal(19,4),",
				"          UnitPriceDiscountPct as double,",
				"          DiscountAmount as double,",
				"          ProductStandardCost as decimal(19,4),",
				"          TotalProductCost as decimal(19,4),",
				"          SalesAmount as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          CarrierTrackingNumber as string,",
				"          CustomerPONumber as string,",
				"          OrderDate as timestamp,",
				"          DueDate as timestamp,",
				"          ShipDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> srcFactInternetSales",
				"source(output(",
				"          PromotionKey as integer,",
				"          PromotionAlternateKey as integer,",
				"          EnglishPromotionName as string,",
				"          SpanishPromotionName as string,",
				"          FrenchPromotionName as string,",
				"          DiscountPct as double,",
				"          EnglishPromotionType as string,",
				"          SpanishPromotionType as string,",
				"          FrenchPromotionType as string,",
				"          EnglishPromotionCategory as string,",
				"          SpanishPromotionCategory as string,",
				"          FrenchPromotionCategory as string,",
				"          StartDate as timestamp,",
				"          EndDate as timestamp,",
				"          MinQty as integer,",
				"          MaxQty as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimPromotion",
				"source(output(",
				"          SalesTerritoryKey as integer,",
				"          SalesTerritoryAlternateKey as integer,",
				"          SalesTerritoryRegion as string,",
				"          SalesTerritoryCountry as string,",
				"          SalesTerritoryGroup as string,",
				"          SalesTerritoryImage as binary",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimSalesTerritory",
				"source(output(",
				"          CustomerKey as integer,",
				"          GeographyKey as integer,",
				"          CustomerAlternateKey as string,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          NameStyle as boolean,",
				"          BirthDate as date,",
				"          MaritalStatus as string,",
				"          Suffix as string,",
				"          Gender as string,",
				"          EmailAddress as string,",
				"          YearlyIncome as decimal(19,4),",
				"          TotalChildren as integer,",
				"          NumberChildrenAtHome as integer,",
				"          EnglishEducation as string,",
				"          SpanishEducation as string,",
				"          FrenchEducation as string,",
				"          EnglishOccupation as string,",
				"          SpanishOccupation as string,",
				"          FrenchOccupation as string,",
				"          HouseOwnerFlag as string,",
				"          NumberCarsOwned as integer,",
				"          AddressLine1 as string,",
				"          AddressLine2 as string,",
				"          Phone as string,",
				"          DateFirstPurchase as date,",
				"          CommuteDistance as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimCustomer",
				"source(output(",
				"          ProductKey as integer,",
				"          ProductAlternateKey as string,",
				"          ProductSubcategoryKey as integer,",
				"          WeightUnitMeasureCode as string,",
				"          SizeUnitMeasureCode as string,",
				"          EnglishProductName as string,",
				"          SpanishProductName as string,",
				"          FrenchProductName as string,",
				"          StandardCost as decimal(19,4),",
				"          FinishedGoodsFlag as boolean,",
				"          Color as string,",
				"          SafetyStockLevel as integer,",
				"          ReorderPoint as integer,",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          SizeRange as string,",
				"          Weight as double,",
				"          DaysToManufacture as integer,",
				"          ProductLine as string,",
				"          DealerPrice as decimal(19,4),",
				"          Class as string,",
				"          Style as string,",
				"          ModelName as string,",
				"          LargePhoto as binary,",
				"          EnglishDescription as string,",
				"          FrenchDescription as string,",
				"          ChineseDescription as string,",
				"          ArabicDescription as string,",
				"          HebrewDescription as string,",
				"          ThaiDescription as string,",
				"          GermanDescription as string,",
				"          JapaneseDescription as string,",
				"          TurkishDescription as string,",
				"          StartDate as timestamp,",
				"          EndDate as timestamp,",
				"          Status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimProduct",
				"srcFactInternetSales, DimPromotion join(srcFactInternetSales@PromotionKey == DimPromotion@PromotionKey,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinPromotion",
				"joinPromotion, DimSalesTerritory lookup(srcFactInternetSales@SalesTerritoryKey == DimSalesTerritory@SalesTerritoryKey,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lkupSalesTerritory",
				"lkupSalesTerritory, DimCustomer lookup(srcFactInternetSales@CustomerKey == DimCustomer@CustomerKey,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lkupCustomer",
				"lkupCustomer, DimProduct lookup(srcFactInternetSales@ProductKey == DimProduct@ProductKey,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lkupProduct",
				"slctAfterLkups select(mapColumn(",
				"          ProductKey,",
				"          OrderDateKey,",
				"          DueDateKey,",
				"          ShipDateKey,",
				"          CustomerKey,",
				"          PromotionKey,",
				"          CurrencyKey,",
				"          SalesTerritoryKey,",
				"          SalesOrderNumber,",
				"          SalesOrderLineNumber,",
				"          RevisionNumber,",
				"          OrderQuantity,",
				"          UnitPrice,",
				"          ExtendedAmount,",
				"          UnitPriceDiscountPct,",
				"          DiscountAmount,",
				"          ProductStandardCost,",
				"          TotalProductCost,",
				"          SalesAmount,",
				"          TaxAmt,",
				"          Freight,",
				"          CarrierTrackingNumber,",
				"          CustomerPONumber,",
				"          OrderDate,",
				"          DueDate,",
				"          ShipDate,",
				"          PromotionAlternateKey,",
				"          EnglishPromotionName,",
				"          SpanishPromotionName,",
				"          FrenchPromotionName,",
				"          DiscountPct,",
				"          EnglishPromotionType,",
				"          SpanishPromotionType,",
				"          FrenchPromotionType,",
				"          EnglishPromotionCategory,",
				"          SpanishPromotionCategory,",
				"          FrenchPromotionCategory,",
				"          StartDate,",
				"          EndDate,",
				"          MinQty,",
				"          MaxQty,",
				"          SalesTerritoryAlternateKey,",
				"          SalesTerritoryRegion,",
				"          SalesTerritoryCountry,",
				"          SalesTerritoryGroup,",
				"          SalesTerritoryImage,",
				"          GeographyKey,",
				"          CustomerAlternateKey,",
				"          Title,",
				"          FirstName,",
				"          MiddleName,",
				"          LastName,",
				"          NameStyle,",
				"          BirthDate,",
				"          MaritalStatus,",
				"          Suffix,",
				"          Gender,",
				"          EmailAddress,",
				"          YearlyIncome,",
				"          TotalChildren,",
				"          NumberChildrenAtHome,",
				"          EnglishEducation,",
				"          SpanishEducation,",
				"          FrenchEducation,",
				"          EnglishOccupation,",
				"          SpanishOccupation,",
				"          FrenchOccupation,",
				"          HouseOwnerFlag,",
				"          NumberCarsOwned,",
				"          AddressLine1,",
				"          AddressLine2,",
				"          Phone,",
				"          DateFirstPurchase,",
				"          CommuteDistance,",
				"          ProductAlternateKey,",
				"          ProductSubcategoryKey,",
				"          WeightUnitMeasureCode,",
				"          SizeUnitMeasureCode,",
				"          EnglishProductName,",
				"          SpanishProductName,",
				"          FrenchProductName,",
				"          StandardCost,",
				"          FinishedGoodsFlag,",
				"          Color,",
				"          SafetyStockLevel,",
				"          ReorderPoint,",
				"          ListPrice,",
				"          Size,",
				"          SizeRange,",
				"          Weight,",
				"          DaysToManufacture,",
				"          ProductLine,",
				"          DealerPrice,",
				"          Class,",
				"          Style,",
				"          ModelName,",
				"          LargePhoto,",
				"          EnglishDescription,",
				"          FrenchDescription,",
				"          ChineseDescription,",
				"          ArabicDescription,",
				"          HebrewDescription,",
				"          ThaiDescription,",
				"          GermanDescription,",
				"          JapaneseDescription,",
				"          TurkishDescription,",
				"          Status",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> slctTargetData",
				"slctTargetData derive(CustomerName = FirstName + ' '+LastName) ~> drvCustomerName",
				"drvCustomerName select(mapColumn(",
				"          SalesOrderNumber,",
				"          SalesOrderLineNumber,",
				"          OrderQuantity,",
				"          UnitPrice,",
				"          ExtendedAmount,",
				"          UnitPriceDiscountPct,",
				"          DiscountAmount,",
				"          ProductStandardCost,",
				"          TotalProductCost,",
				"          SalesAmount,",
				"          TaxAmt,",
				"          Freight,",
				"          CarrierTrackingNumber,",
				"          CustomerPONumber,",
				"          EnglishPromotionName,",
				"          DiscountPct,",
				"          EnglishPromotionType,",
				"          EnglishPromotionCategory,",
				"          StartDate,",
				"          EndDate,",
				"          MinQty,",
				"          MaxQty,",
				"          SalesTerritoryKey,",
				"          SalesTerritoryAlternateKey,",
				"          SalesTerritoryRegion,",
				"          SalesTerritoryCountry,",
				"          SalesTerritoryGroup,",
				"          Title,",
				"          FirstName,",
				"          MiddleName,",
				"          LastName,",
				"          NameStyle,",
				"          BirthDate,",
				"          MaritalStatus,",
				"          Suffix,",
				"          Gender,",
				"          EmailAddress,",
				"          YearlyIncome,",
				"          EnglishEducation,",
				"          EnglishOccupation,",
				"          AddressLine1,",
				"          AddressLine2,",
				"          Phone,",
				"          DateFirstPurchase,",
				"          CommuteDistance,",
				"          EnglishProductName,",
				"          StandardCost,",
				"          Color,",
				"          ListPrice,",
				"          ProductLine,",
				"          DealerPrice,",
				"          Class,",
				"          Style,",
				"          ModelName,",
				"          Status,",
				"          Customer_Name = CustomerName",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> slctTarget",
				"lkupProduct select(mapColumn(",
				"          each(match(/* All input columns */true()),",
				"               /* Input name */$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> slctAfterLkups",
				"slctTarget keyGenerate(output(SalesNormalizedKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrKey",
				"surrKey sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> TargetData"
			]
		}
	}
}