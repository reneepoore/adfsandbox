{
	"name": "SCDType2_EmployeePOC",
	"properties": {
		"description": "POC for SCD Type 2 with Adventure Works Data",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "stgSourceEmployee",
						"type": "DatasetReference"
					},
					"name": "srcEmployeeData"
				},
				{
					"dataset": {
						"referenceName": "tgtDimEmployee",
						"type": "DatasetReference"
					},
					"name": "tgtDimEmployee"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "tgtDimEmployee",
						"type": "DatasetReference"
					},
					"name": "SinkNewData"
				},
				{
					"dataset": {
						"referenceName": "tgtDimEmployee",
						"type": "DatasetReference"
					},
					"name": "SinkUpdates"
				},
				{
					"dataset": {
						"referenceName": "tgtDimEmployee",
						"type": "DatasetReference"
					},
					"name": "SinkInactive"
				}
			],
			"transformations": [
				{
					"name": "SetIsActive"
				},
				{
					"name": "CheckNewRecords"
				},
				{
					"name": "SelectToRename"
				},
				{
					"name": "CheckForChanges"
				},
				{
					"name": "AddIsActive"
				},
				{
					"name": "ChangeIsActive"
				},
				{
					"name": "SelectInactiveFields"
				},
				{
					"name": "alterRow1"
				},
				{
					"name": "LkpEmployee"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          FirstName as string,",
				"          LastName as string,",
				"          MiddleName as string,",
				"          Title as string,",
				"          HireDate as date,",
				"          BirthDate as date,",
				"          Phone as string,",
				"          MaritalStatus as string,",
				"          EmergencyContactName as string,",
				"          EmergencyContactPhone as string,",
				"          SalariedFlag as boolean,",
				"          Gender as string,",
				"          DepartmentName as string,",
				"          StartDate as date,",
				"          EndDate as date,",
				"          Status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> srcEmployeeData",
				"source(output(",
				"          EmployeeKey as integer,",
				"          FirstName as string,",
				"          LastName as string,",
				"          MiddleName as string,",
				"          Title as string,",
				"          HireDate as date,",
				"          BirthDate as date,",
				"          Phone as string,",
				"          MaritalStatus as string,",
				"          EmergencyContactName as string,",
				"          EmergencyContactPhone as string,",
				"          SalariedFlag as boolean,",
				"          Gender as string,",
				"          DepartmentName as string,",
				"          StartDate as date,",
				"          EndDate as date,",
				"          Status as string,",
				"          IsActive as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> tgtDimEmployee",
				"CheckNewRecords@NewRecords derive(IsActive = 1) ~> SetIsActive",
				"select1 split(isNull(),",
				"     disjoint: false) ~> CheckNewRecords@(NewRecords, CheckForUpdates)",
				"CheckNewRecords@CheckForUpdates select(mapColumn(",
				"          FirstName = CheckNewRecords@CheckForUpdates@FirstName,",
				"          LastName = CheckNewRecords@CheckForUpdates@LastName,",
				"          MiddleName = CheckNewRecords@CheckForUpdates@MiddleName,",
				"          Title = CheckNewRecords@CheckForUpdates@Title,",
				"          HireDate = CheckNewRecords@CheckForUpdates@HireDate,",
				"          BirthDate = CheckNewRecords@CheckForUpdates@BirthDate,",
				"          Phone = CheckNewRecords@CheckForUpdates@Phone,",
				"          MaritalStatus = CheckNewRecords@CheckForUpdates@MaritalStatus,",
				"          EmergencyContactName = CheckNewRecords@CheckForUpdates@EmergencyContactName,",
				"          EmergencyContactPhone = CheckNewRecords@CheckForUpdates@EmergencyContactPhone,",
				"          SalariedFlag = CheckNewRecords@CheckForUpdates@SalariedFlag,",
				"          Gender = CheckNewRecords@CheckForUpdates@Gender,",
				"          DepartmentName = CheckNewRecords@CheckForUpdates@DepartmentName,",
				"          StartDate = CheckNewRecords@CheckForUpdates@StartDate,",
				"          EndDate = CheckNewRecords@CheckForUpdates@EndDate,",
				"          Status = CheckNewRecords@CheckForUpdates@Status,",
				"          FirstName = CheckNewRecords@CheckForUpdates@FirstName,",
				"          LastName = CheckNewRecords@CheckForUpdates@LastName,",
				"          MiddleName = CheckNewRecords@CheckForUpdates@MiddleName,",
				"          Title = CheckNewRecords@CheckForUpdates@Title,",
				"          HireDate = CheckNewRecords@CheckForUpdates@HireDate,",
				"          BirthDate = CheckNewRecords@CheckForUpdates@BirthDate,",
				"          Phone = CheckNewRecords@CheckForUpdates@Phone,",
				"          MaritalStatus = CheckNewRecords@CheckForUpdates@MaritalStatus,",
				"          EmergencyContactName = CheckNewRecords@CheckForUpdates@EmergencyContactName,",
				"          EmergencyContactPhone = CheckNewRecords@CheckForUpdates@EmergencyContactPhone,",
				"          SalariedFlag = CheckNewRecords@CheckForUpdates@SalariedFlag,",
				"          Gender = CheckNewRecords@CheckForUpdates@Gender,",
				"          DepartmentName = CheckNewRecords@CheckForUpdates@DepartmentName,",
				"          StartDate = CheckNewRecords@CheckForUpdates@StartDate,",
				"          EndDate = CheckNewRecords@CheckForUpdates@EndDate,",
				"          Status = CheckNewRecords@CheckForUpdates@Status",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectToRename",
				"SelectToRename, tgtDimEmployee exists(SelectToRename@LastName!=tgtDimEmployee@LastName||\r",
				"SelectToRename@Title!=tgtDimEmployee@Title||\r",
				"SelectToRename@Phone!=tgtDimEmployee@Phone||\r",
				"SelectToRename@MaritalStatus!=tgtDimEmployee@MaritalStatus||\r",
				"SelectToRename@SalariedFlag!=tgtDimEmployee@SalariedFlag||\r",
				"SelectToRename@DepartmentName!=tgtDimEmployee@DepartmentName||\r",
				"SelectToRename@EndDate!=tgtDimEmployee@EndDate||\r",
				"SelectToRename@Status!=tgtDimEmployee@Status,",
				"     negate:false,",
				"     broadcast: 'auto')~> CheckForChanges",
				"CheckForChanges derive(IsActive = 1) ~> AddIsActive",
				"CheckForChanges derive(IsActive = 0) ~> ChangeIsActive",
				"ChangeIsActive select(mapColumn(",
				"          LastName,",
				"          Title,",
				"          Phone,",
				"          MaritalStatus,",
				"          SalariedFlag,",
				"          DepartmentName,",
				"          EndDate,",
				"          Status",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectInactiveFields",
				"SelectInactiveFields alterRow(updateIf(true())) ~> alterRow1",
				"srcEmployeeData, tgtDimEmployee lookup(srcEmployeeData@FirstName == srcEmployeeData@FirstName",
				"     && srcEmployeeData@LastName == srcEmployeeData@LastName",
				"     && srcEmployeeData@BirthDate == srcEmployeeData@BirthDate,",
				"     multiple: true,",
				"     broadcast: 'auto')~> LkpEmployee",
				"LkpEmployee select(mapColumn(",
				"          FirstName = srcEmployeeData@FirstName,",
				"          LastName = srcEmployeeData@LastName,",
				"          MiddleName = srcEmployeeData@MiddleName,",
				"          Title = srcEmployeeData@Title,",
				"          HireDate = srcEmployeeData@HireDate,",
				"          BirthDate = srcEmployeeData@BirthDate,",
				"          Phone = srcEmployeeData@Phone,",
				"          MaritalStatus = srcEmployeeData@MaritalStatus,",
				"          EmergencyContactName = srcEmployeeData@EmergencyContactName,",
				"          EmergencyContactPhone = srcEmployeeData@EmergencyContactPhone,",
				"          SalariedFlag = srcEmployeeData@SalariedFlag,",
				"          Gender = srcEmployeeData@Gender,",
				"          DepartmentName = srcEmployeeData@DepartmentName,",
				"          StartDate = srcEmployeeData@StartDate,",
				"          EndDate = srcEmployeeData@EndDate,",
				"          Status = srcEmployeeData@Status,",
				"          EmployeeKey,",
				"          FirstName = tgtDimEmployee@FirstName,",
				"          LastName = tgtDimEmployee@LastName,",
				"          MiddleName = tgtDimEmployee@MiddleName,",
				"          Title = tgtDimEmployee@Title,",
				"          HireDate = tgtDimEmployee@HireDate,",
				"          BirthDate = tgtDimEmployee@BirthDate,",
				"          Phone = tgtDimEmployee@Phone,",
				"          MaritalStatus = tgtDimEmployee@MaritalStatus,",
				"          EmergencyContactName = tgtDimEmployee@EmergencyContactName,",
				"          EmergencyContactPhone = tgtDimEmployee@EmergencyContactPhone,",
				"          SalariedFlag = tgtDimEmployee@SalariedFlag,",
				"          Gender = tgtDimEmployee@Gender,",
				"          DepartmentName = tgtDimEmployee@DepartmentName,",
				"          StartDate = tgtDimEmployee@StartDate,",
				"          EndDate = tgtDimEmployee@EndDate,",
				"          Status = tgtDimEmployee@Status,",
				"          IsActive",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"SetIsActive sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SinkNewData",
				"AddIsActive sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SinkUpdates",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SinkInactive"
			]
		}
	}
}